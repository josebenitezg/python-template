name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv pip list

    - name: Verify installation
      run: uv run python -c "import flake8; print('flake8 available'); import black; print('black available')"

    - name: Lint with flake8
      run: uv run python -m flake8 src/ tests/

    - name: Format with black
      run: uv run python -m black src/ tests/

    - name: Sort imports with isort
      run: uv run python -m isort src/ tests/

    - name: Check if formatting changed files
      run: |
        if ! git diff --quiet; then
          echo "Code formatting changes detected:"
          git diff --name-only
          git diff
          echo "::warning::Code was not properly formatted. Running black and isort fixed the issues."
        else
          echo "Code is properly formatted."
        fi

    - name: Type check with mypy
      run: uv run python -m mypy src/

    - name: Test with pytest
      run: uv run pytest --cov=src/python_template --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  template-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install UV
      uses: astral-sh/setup-uv@v2

    - name: Test template CLI
      run: |
        uv sync --all-extras
        uv run python-template --help
        uv run python-template info
        uv run python-template config
        uv run python-template test-logging 